# -*- coding: utf-8 -*-
"""Inference.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UzQRHhkzfwiB_nv5OSivtFxlE69ASdXA
"""

import torch
import torchvision
import argparse
from Model import Model
import cv2
import numpy as np
from retinaface import RetinaFace

my_parser = argparse.ArgumentParser()
my_parser.add_argument('--device',default='cpu', type=str)
my_parser.add_argument('--model_path', type=str)
my_parser.add_argument('--image_path', type=str)
args=my_parser.parse_args()

transform = torchvision.transforms.Compose([
                                            torchvision.transforms.ToPILImage(),
                                            torchvision.transforms.ToTensor(),
                                            torchvision.transforms.RandomHorizontalFlip(),
                                            torchvision.transforms.Normalize((0),(1))
])

device = torch.device('cuda' if torch.cuda.is_available() and args.device=='GPU' else 'cpu')
model = Model()
model = model.to(device)

model.load_state_dict(torch.load(args.model_path ,map_location=torch.device(args.device)))

def process_and_predict(image_path):
  faces=RetinaFace.extract_faces(img_path=image_path,align=True)
  image=faces[0]
  image=cv2.resize(image, (width,height))
  plt.imshow(image)

  tensor = transform(image).unsqueeze(0).to(device)

  model.eval()

  age=model(tensor)
  print(age)

  
pred = process_and_predict(args.image_path)
print('prediction:',pred)